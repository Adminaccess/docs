(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{141:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var r=n(1),a=n(9),o=(n(0),n(200)),i={id:"AdminGettingStarted",title:"Getting started",sidebar_label:"Getting Started"},c={id:"AdminGettingStarted",title:"Getting started",description:"# Getting Started",source:"@site/docs/Admin - Getting Started.md",permalink:"/docs/docs/AdminGettingStarted",editUrl:"https://github.com/Samagra-Development/docs/edit/master/docs/Admin - Getting Started.md",sidebar_label:"Getting Started",sidebar:"someSidebar",previous:{title:"App Logging",permalink:"/docs/docs/Grove"},next:{title:"Adding Additional databases to Admin",permalink:"/docs/docs/AdminAddingExternalData"}},s=[{value:"Installation",id:"installation",children:[]},{value:"Basics of react-admin",id:"basics-of-react-admin",children:[{value:"At a Glance",id:"at-a-glance",children:[]}]},{value:"Whats next?",id:"whats-next",children:[]}],p={rightToc:s};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"getting-started"},"Getting Started"),Object(o.b)("p",null,"A frontend Framework for building admin applications running in the browser, on top of REST/GraphQL APIs, using ES6, ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://facebook.github.io/react/"}),"React")," and ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://material.io/"}),"Material Design"),". This is built over ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/"}),"React-Admin")," built by marmelab."),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("p",null,"Use the following starter project to build your first app. Since this is a sample opinionated configuration feel free to make any change to it."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"git clone https://gitlab.com/ctt-samagra/opensource-packages/user-management-package/samagra-admin-module")),Object(o.b)("h2",{id:"basics-of-react-admin"},"Basics of react-admin"),Object(o.b)("p",null,"Read the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"./Tutorial.md"}),"Tutorial")," for a 30 minutes introduction. After that, continue reading the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"./DataProviders.md"}),"Documentation"),", or checkout the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/marmelab/react-admin/tree/master/examples/demo"}),"source code of the demo")," for an example usage."),Object(o.b)("h3",{id:"at-a-glance"},"At a Glance"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),'// in app.js\nimport  React  from  "react";\nimport { render } from  "react-dom";\nimport { Admin, Resource } from  "react-admin";\nimport  simpleRestProvider  from  "ra-data-simple-rest";\nimport { PostList, PostEdit, PostCreate, PostIcon } from  "./posts";\nrender(\n    <Admin  dataProvider={simpleRestProvider("http://localhost:3000")}>\n        <Resource\n            name="posts"\n            list={PostList}\n            edit={PostEdit}\n            create={PostCreate}\n            icon={PostIcon}\n        />\n    </Admin>,\n    document.getElementById("root")\n);\n\n')),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"<Resource>")," component is a configuration component that allows to define sub components for each of the admin view: ",Object(o.b)("inlineCode",{parentName:"p"},"list"),", ",Object(o.b)("inlineCode",{parentName:"p"},"edit"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"create"),". These components use Material UI and custom components from react-admin:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),'// in posts.js\nimport  React  from  "react";\nimport {\n    List,\n    Datagrid,\n    Edit,\n    Create,\n    SimpleForm,\n    DateField,\n    TextField,\n    EditButton,\n    TextInput,\n    DateInput,\n} from  "react-admin";\n\nimport  BookIcon  from  "@material-ui/icons/Book";\nexport  const  PostIcon = BookIcon;\nexport  const  PostList = (props) => (\n    <List  {...props}>\n        <Datagrid>\n        <TextField  source="id"  />\n        <TextField  source="title"  />\n        <DateField  source="published_at"  />\n        <TextField  source="average_note"  />\n        <TextField  source="views"  />\n        <EditButton  basePath="/posts"  />\n        </Datagrid>\n    </List>\n);\n\nconst  PostTitle = ({ record }) => {\n    return  <span>Post {record ? `"${record.title}"` : ""}</span>;\n};\n\nexport  const  PostEdit = (props) => (\n    <Edit  title={<PostTitle  />}  {...props}>\n        <SimpleForm>\n            <TextInput  disabled  source="id"  />\n            <TextInput  source="title"  />\n            <TextInput  source="teaser"  options={{ multiLine:  true }}  />\n            <TextInput  multiline  source="body"  />\n            <DateInput  label="Publication date"  source="published_at"  />\n            <TextInput  source="average_note"  />\n            <TextInput  disabled  label="Nb views"  source="views"  />\n        </SimpleForm>\n    </Edit>\n);\n\nexport  const  PostCreate = (props) => (\n    <Create  title="Create a Post"  {...props}>\n        <SimpleForm>\n            <TextInput  source="title"  />\n            <TextInput  source="teaser"  options={{ multiLine:  true }}  />\n            <TextInput  multiline  source="body"  />\n            <TextInput  label="Publication date"  source="published_at"  />\n            <TextInput  source="average_note"  />\n        </SimpleForm>\n    </Create>\n);\n\n')),Object(o.b)("h2",{id:"whats-next"},"Whats next?"),Object(o.b)("p",null,"Now that you have a basic understanding of how things work, let's start with adding more capabilities to it.\n1. Adding authentication and authorization\n2. Adding Custom Routes\n3. Adding multiple data providers"))}d.isMDXComponent=!0},200:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),d=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},l=function(e){var t=d(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=d(n),m=r,b=l["".concat(i,".").concat(m)]||l[m]||u[m]||o;return n?a.a.createElement(b,c({ref:t},p,{components:n})):a.a.createElement(b,c({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);